"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User] @all
    user(id: ID @eq): User @find
    redirectProvider: String! @field(resolver: "SocialLogin@redirectToProvider")
    providerRedirect: String! @field(resolver: "SocialLogin@providerRedirect")
}

type User {
    id: ID!
    firstname: String!
    lastname: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    password: String!
}

type Mutation {
    login(
        email: String! @rules(apply: ["email", "required"])
        password: String!
            @rules(
                apply: ["required", "min:3"]
                messages: [
                    { rule: "min:3", message: "Minimum of 3 characters" }
                ]
            )
    ): String! @field(resolver: "AuthMutator@login")

    register(
        email: String!
            @rules(
                apply: ["email", "required", "unique:users,email"]
                messages: [
                    {
                        rule: "unique:users,email_address"
                        message: "Email already exists"
                    }
                ]
            )
        firstname: String!
            @rules(
                apply: ["min:2", "required"]
                messages: [
                    { rule: "min:2", message: "Minimum of 2 characters" }
                    { rule: "required", message: "Firstname is required" }
                ]
            )
        lastname: String!
            @rules(
                apply: ["min:2", "required"]
                messages: [
                    { rule: "min:2", message: "Minimum of 2 characters" }
                    { rule: "required", message: "Lastname is required" }
                ]
            )
        password: String!
            @rules(
                apply: ["required", "min:8"]
                messages: [
                    { rule: "min:8", message: "Minimum of 8 characters" }
                ]
            )
    ): CustomRegPayload! @field(resolver: "AuthMutator@register")
}

type CustomRegPayload {
    user: User
    token: String
}
